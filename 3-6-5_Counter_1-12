module top_module (
    input wire clk,
    input wire reset,
    input wire enable,
    output reg [3:0] Q,
    output wire c_enable,
    output wire c_load,
    output wire [3:0] c_d
	);
    initial Q <= 1;
    
    always @(posedge clk) begin
        if(reset | ((Q == 12) & enable))
            Q <= 1;
        else
            Q <= (enable)? Q + 1 : Q;
    end
    
    assign c_enable = enable;
    assign c_load = reset | ((Q == 12) & enable);
    assign c_d = (c_load)? 1 : 0;

    count4 the_counter (clk, c_enable, c_load, c_d /*, ... */ );

endmodule
